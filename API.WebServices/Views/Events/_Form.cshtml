@model Events
@Html.HiddenFor(m => m.Id)
<div class="two fields">
    <div class="field required">
        @Html.LabelFor(model => model.Title)
        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { placeholder = "Title" } })
        <span asp-validation-for="Title" class="text-danger error" style="color:red"></span>
    </div>
    <div class="field required">
        @Html.LabelFor(model => model.Link)
        @Html.EditorFor(model => model.Link, new { htmlAttributes = new { placeholder = "Link" }, type = "url" })
        <span asp-validation-for="Link" class="text-danger error" style="color:red"></span>
    </div>
</div>
<div class="two fields required">
    <div class="field">
        @Html.LabelFor(model => model.Source)
        @Html.EditorFor(model => model.Source, new { htmlAttributes = new { placeholder = "Source" } })
        <span asp-validation-for="Source" class="text-danger error" style="color:red"></span>
    </div>
    <div class="field">
        @Html.LabelFor(model => model.Date)
        <div class="ui calendar datepicker">
            <div class="ui input left icon">
                <i class="calendar icon"></i>
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { placeholder = "Events Date" } })
            </div>
        </div>
    </div>
</div>
<div class="two fields ">
    <div class="field">
        @Html.LabelFor(model => model.Category)
        @{
            List<SelectListItem> languageListItems = new List<SelectListItem>();
            languageListItems.Add(new SelectListItem { Text = "Upcoming", Value = "Upcoming" });
            languageListItems.Add(new SelectListItem { Text = "Past", Value = "Past" });
        }
        @Html.DropDownListFor(model => model.Category, languageListItems, new { @class = "ui dropdown" })
    </div>
    <div class="field">
        @Html.LabelFor(model => model.Status)
        @{
            List<SelectListItem> statusListItems = new List<SelectListItem>();
            statusListItems.Add(new SelectListItem { Text = "Active", Value = "Active" });
            statusListItems.Add(new SelectListItem { Text = "Inactive", Value = "Inactive" });
        }
        @Html.DropDownListFor(model => model.Status, statusListItems, new { @class = "ui dropdown" })
    </div>
</div>
<div class="field">
    <label>Notes</label>
    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { placeholder = "Events Description" } })
</div>
<div class="field js-image-upload ">
    <div class="field required">
        <label>Events Image<span style="">  (size: 330 * 180) </span></label>
        <img class="ui small image" style="height:180px;width:auto" src="@Model.Image">
        <input id="imageUrlValue" name="Image" value="@Model.Image" style="display:none" />
        <span asp-validation-for="Image" class="text-danger error" style="color:red"></span>
    </div>
    <div class="field">
        <div>
            <label for="_upload" class="ui button primary">
                <i class="add icon"></i> Upload
                <input type="file" id="_upload" style="display:none">
            </label>
        </div>
    </div>
    <div class="field">
        <div class="ui blue progress" data-percent="0" style="display:none">
            <div class="bar"></div>
        </div>
    </div>
</div>